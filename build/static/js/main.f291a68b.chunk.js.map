{"version":3,"sources":["components/Alert.js","components/Navabar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","msg","Navabar","mode","href","title","id","class","modeText","onClick","togglemode","htmlFor","text","TextForm","useState","setText","heading","rows","value","onChange","event","target","console","log","newText","toUpperCase","newlowtext","toLowerCase","length","split","App","setMode","setModeText","setAlert","showAlert","message","setTimeout","document","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f291a68b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert &&  <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.msg}</strong> {props.alert.type}\r\n  {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import {Link} from 'react-router-dom';\r\n\r\nexport default function Navabar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">About</a>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div class={`form-check form-switch text-${props.modeText==='light'?'dark':'light'}`}>\r\n              <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\r\n              <label class=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.text}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const [text,setText]=useState('');\r\n\t\r\n\t\tconst btnClicked=()=>{\r\n\t\t\tconsole.log(typeof text)\r\n\t\t\t let newText=text.toUpperCase();\r\n\t\t\t\tsetText(newText);\r\n\t\t\t\tconsole.log(newText)\r\n\t\t}\r\n\r\n\t\tconst btnlowclicked=()=>{\r\n\t\t\t  let newlowtext=text.toLowerCase();\r\n\t\t\t\t\tsetText(newlowtext);\r\n\t\t\t\t\t\r\n\t\t}\r\n\r\n\t\tconst btnClearText=()=>{\r\n\t\t\t  setText('');\t\t\t\r\n\t\t}\r\n\r\n\t\tconst handleChange=(event)=>{\r\n     setText(event.target.value)\r\n\t\t}\r\n\r\n    return (\r\n\t\t\t\t\t<>\r\n      <div className=\"container\">\r\n\t\t\t\t\t\t\t<h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n  \t\t\t\t\t\t\t\t<textarea className=\"form-control\" id=\"mybox\" rows=\"8\" value={text} onChange={handleChange}></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\"  onClick={btnClicked}>convert in uppercase</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary mx-2\" onClick={btnlowclicked}>convert in lowercase</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary mx-2\" onClick={btnClearText}>Clear Text</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"container my-3\">\r\n\t\t\t\t\t\t\t\t <h2>Your Text summary</h2>\r\n\t\t\t\t\t\t\t\t\t<p>Number of characters in your text are :-{text.length}</p>\r\n\t\t\t\t\t\t\t\t\t<p>Number of words in your text are :-{text.split(\" \").length}</p>\r\n\t\t\t\t\t\t\t\t\t<p>Time to read the text :-{0.008* text.split(\" \").length}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</>\r\n    )\r\n}\r\n","import React,{useState} from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Routes,\n//   Link\n// } from \"react-router-dom\";\nimport AboutUs from \"./components/AboutUs\";\nimport Alert from \"./components/Alert\";\nimport Navabar from \"./components/Navabar\";\nimport TextForm from \"./components/TextForm\";\n\n\n//import './App.css';\nfunction App() {\n\n  const [mode,setMode]=useState('light');\n\n  const [modeText,setModeText]=useState('light');\n\n  const [text,setText]=useState('Dark Mode');\n\n  const [alert,setAlert]=useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },1500)\n  }\n\n  const ToggleMode=()=>{\n    if(mode=='light')\n    {\n      setMode('dark');\n      setModeText('dark');\n      setText('Light Mode')\n      document.body.style.backgroundColor=\"#495057\";\n      document.body.style.color=\"white\";\n      showAlert('Dark Mode Enabled','success');\n    }\n    else{\n      setMode('light')\n      setModeText('light')\n      setText('Dark Mode')\n      document.body.style.backgroundColor=\"white\";\n      document.body.style.color=\"black\";\n      showAlert('Light Mode Enabled','success');\n    }\n  }\n  return (\n   <>\n\t\t<Navabar title=\"Text Utils\" togglemode={ToggleMode} mode={mode} modeText={modeText} text={text}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\" >\n    <TextForm heading=\"Enter the Text Below\"/>\n    </div>\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <AboutUs />\n          </Route>\n          <Route exact path=\"/\">\n          \n          </Route>\n        </Switch> */}\n\t</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}